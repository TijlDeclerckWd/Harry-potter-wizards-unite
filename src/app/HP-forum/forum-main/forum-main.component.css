.btn {
  /*link pseudoclass, special state of selector */
  /*When we click the button that is called the active state*/
  /*this transform state is always related to the hover state, not the hover state.*/
  /*the after pseudo element adds an element right behind the elemetn*/ }
  .btn:link, .btn:visited {
    text-decoration: none;
    text-transform: uppercase;
    /*first are top and bottom, second are left and right*/
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    /*this refers to all the animations that will be added to the initial state*/
    /*the transitions property needs to be on the initial state*/
    transition: all 0.2s;
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-0.3rem);
    /*1st offset in x direction, 2nd y offset, 3rd blury shadow we want to see*/
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /* we want to see the after button when we hover the button*/ }
    .btn:hover::after {
      /*what scale does is increase the element*/
      /*there's scale, scaleX and scaleY*/
      transform: scaleX(1.5) scaleY(1.4);
      /*this makes the ::after button go invisible after the 0.4 seconds in the transition*/
      opacity: 0; }
  .btn:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn--grey {
    background-color: #7C7C7C;
    color: white; }
  .btn--primary {
    background-color: #002F5A;
    color: white; }
  .btn::after {
    /*we always need to specify content and display properties*/
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s; }
  .btn--animated {
    animation: moveInBottom 2s ease-out .75s;
    /*the 0% stats will be applied before the animation starts*/
    animation-fill-mode: backwards; }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #002F5A;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #002F5A;
  padding: 3px;
  transition: all .2s; }
.btn-text:hover {
  background-color: #002F5A;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }
.btn-text:active {
  box-shadow: 0 0.5rem 1 rem rgba(0, 0, 0, 0.15);
  transform: translateY(0); }

.forum-container {
  display: flex;
  justify-content: center;
  min-height: 50rem;
  background-color: #fff; }
  @media (max-width: 37.5em) {
    .forum-container {
      display: block; } }
  .forum-container .navigation-container {
    width: 25%;
    margin-right: 2%; }
    @media (max-width: 56.25em) {
      .forum-container .navigation-container {
        width: 30%;
        margin-right: 0; } }
    @media (max-width: 37.5em) {
      .forum-container .navigation-container {
        width: 100%;
        margin-right: 0; } }
  .forum-container .list-container {
    width: 65%; }
    @media (max-width: 56.25em) {
      .forum-container .list-container {
        width: 70%; } }
    @media (max-width: 37.5em) {
      .forum-container .list-container {
        width: 100%; } }

.modal-1 {
  z-index: 999; }

.modal-body .form-group {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-bottom: 1rem; }
  .modal-body .form-group mat-form-field {
    display: block;
    margin-bottom: 1rem;
    width: 80%; }
.modal-body .confirm-button {
  background-color: #002F5A;
  color: white;
  padding: 1rem; }

/*# sourceMappingURL=forum-main.component.css.map */
